{{- if .Values.worker.enabled -}}
{{- if .Values.beat.enabled -}}
{{- if .Values.flower.enabled -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "django.fullname" . }}-flower
  labels:
    {{- include "django.labels" . | nindent 4 }}
    app.kubernetes.io/component: flower

spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "django.flowerSelectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: flower

  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        tag: "{{ .Values.image.tag }}"
      labels:
        {{- include "django.flowerSelectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: flower

    spec:
    {{- with .Values.hostAliases }}
      hostAliases:
{{ toYaml . | indent 8 }}
    {{- end }}


    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:

        - name: {{ .Chart.Name }}
          {{- if .Values.flower.command }}
          command: {{- toYaml .Values.flower.command | nindent 10}}
          {{- end }}
          {{- if .Values.flower.args }}
          args: {{- toYaml .Values.flower.args | nindent 10}}
          {{- end }}

          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            limits:
              cpu: 50m
              memory: 96Mi
            requests:
              cpu: 1m
              memory: 32Mi
          env:
            - name: SERVER_ROLE
              value: "flower"
          envFrom:
            - secretRef:
                name: {{ include "django.fullname" . }}
            - configMapRef:
                name: {{ include "django.fullname" . }}

        #   readinessProbe:
        #     failureThreshold: {{ .Values.web.readinessProbe.failureThreshold }}
        #     exec:
        #         command:
        #         - "/bin/sh"
        #         - "-c"
        #         - "celery status | grep -o ': OK'"
        #         # - "celery -A project status | grep -o ': OK'" # TODO: make dynamic ?
        #     initialDelaySeconds: 20
        #     periodSeconds: 10

{{- end }}
{{- end }}
{{- end }}
